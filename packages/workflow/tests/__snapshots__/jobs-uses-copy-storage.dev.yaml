// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`jobs-uses-copy-storage.dev 1`] = `
"apiVersion: v1
kind: Namespace
metadata:
  annotations:
    janitor/ttl: 7d
    field.cattle.io/projectId: '1234'
    kubeworkflow/gitBranch: feature-branch-1
    kubeworkflow/mainNamespace: 'true'
    kapp.k14s.io/exists: ''
  labels:
    application: test-jobs-uses-copy-storage
    cert: wildcard
  name: test-jobs-uses-copy-storage-feature-branch-1
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: netpol-ingress
  namespace: test-jobs-uses-copy-storage-feature-branch-1
  annotations:
    kapp.k14s.io/disable-original: ''
spec:
  ingress:
    - from:
        - podSelector: {}
    - from:
        - namespaceSelector:
            matchLabels:
              network-policy/source: ingress-controller
    - from:
        - namespaceSelector:
            matchLabels:
              network-policy/source: monitoring
  podSelector: {}
  policyTypes:
    - Ingress
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: default
  namespace: test-jobs-uses-copy-storage-feature-branch-1
  annotations:
    kapp.k14s.io/disable-original: ''
automountServiceAccountToken: false
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jobs-shared-storage
  annotations:
    kapp.k14s.io/disable-original: ''
  labels: {}
  namespace: awesome-ci
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
  storageClassName: azurefile
---
apiVersion: batch/v1
kind: Job
metadata:
  name: job-test-jobs-uses-copy-storage-feature-branch-1-db-cop-30q8n3
  namespace: awesome-ci
  annotations:
    kapp.k14s.io/nonce: ''
    kapp.k14s.io/update-strategy: fallback-on-replace
    kapp.k14s.io/change-group: kube-workflow/test-jobs-uses-copy-storage-feature-branch-1
    kapp.k14s.io/change-group.db: kube-workflow/db.test-jobs-uses-copy-storage-feature-branch-1
    kapp.k14s.io/change-group.db.copy-storage: kube-workflow/db.copy-storage.test-jobs-uses-copy-storage-feature-branch-1
    kapp.k14s.io/change-group.db..copy-storage: >-
      kube-workflow/db..copy-storage.test-jobs-uses-copy-storage-feature-branch-1
    janitor/ttl: '1800'
    kapp.k14s.io/disable-original: ''
    kapp.k14s.io/create-strategy: fallback-on-update
spec:
  backoffLimit: 2
  activeDeadlineSeconds: 3600
  ttlSecondsAfterFinished: 1800
  template:
    metadata: {}
    spec:
      restartPolicy: Never
      initContainers:
        - name: degit-repository
          image: ghcr.io/socialgouv/kube-workflow/degit:latest
          command:
            - sh
            - '-c'
            - |
              degit kube-workflow/test-jobs-uses-copy-storage#feature-branch-1 \\\\
                /workspace
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
          volumeMounts:
            - name: workspace
              mountPath: /workspace
        - name: degit-action
          image: ghcr.io/socialgouv/kube-workflow/degit:latest
          command:
            - sh
            - '-c'
            - degit SocialGouv/kube-workflow/jobs/copy-storage /action
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
          volumeMounts:
            - name: action
              mountPath: /action
      containers:
        - name: job
          image: mcr.microsoft.com/azure-cli:2.15.1
          imagePullPolicy: IfNotPresent
          env:
            - name: SOURCE_CONTAINER
              value: source-container
            - name: SOURCE_ACCOUNT_NAME
              valueFrom:
                secretKeyRef:
                  key: azurestorageaccountname
                  name: source-account-secret
            - name: SOURCE_ACCOUNT_KEY
              valueFrom:
                secretKeyRef:
                  key: azurestorageaccountkey
                  name: source-account-secret
            - name: DESTINATION_CONTAINER
              value: destination-container
            - name: DESTINATION_ACCOUNT_NAME
              valueFrom:
                secretKeyRef:
                  key: azurestorageaccountname
                  name: destination-account-secret
            - name: DESTINATION_ACCOUNT_KEY
              valueFrom:
                secretKeyRef:
                  key: azurestorageaccountkey
                  name: destination-account-secret
          command:
            - /bin/bash
            - '-c'
            - |
              set -e
              /action/copy-storage.sh
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
          volumeMounts:
            - name: workspace
              mountPath: /workspace
            - name: action
              mountPath: /action
            - name: workflow
              mountPath: /workflow
              subPath: feature-branch-1/ffac537e6cbbf934b08745a378932722df287a53
      volumes:
        - name: workspace
          emptyDir: {}
        - name: action
          emptyDir: {}
        - name: workflow
          persistentVolumeClaim:
            claimName: jobs-shared-storage
---
apiVersion: batch/v1
kind: Job
metadata:
  name: jobci-post-operations-ffac537
  namespace: awesome-ci
  annotations:
    kapp.k14s.io/nonce: ''
    kapp.k14s.io/update-strategy: fallback-on-replace
    kapp.k14s.io/change-group: kube-workflow/post-test-jobs-uses-copy-storage-feature-branch-1
    kapp.k14s.io/change-rule: >-
      upsert after upserting
      kube-workflow/test-jobs-uses-copy-storage-feature-branch-1
    kapp.k14s.io/disable-original: ''
    kapp.k14s.io/create-strategy: fallback-on-update
spec:
  backoffLimit: 1
  activeDeadlineSeconds: 3600
  ttlSecondsAfterFinished: 1800
  template:
    metadata:
      annotations: {}
      labels: {}
    spec:
      restartPolicy: Never
      containers:
        - name: job
          image: debian:stable
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - '-c'
            - rm -rf /workflow/*
          volumeMounts:
            - name: workflow
              mountPath: /workflow
              subPath: feature-branch-1/ffac537e6cbbf934b08745a378932722df287a53
      volumes:
        - name: workflow
          persistentVolumeClaim:
            claimName: jobs-shared-storage
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: jobci-clean-workflow
  namespace: awesome-ci
  annotations:
    kapp.k14s.io/disable-original: ''
    kapp.k14s.io/create-strategy: fallback-on-update
    kapp.k14s.io/update-strategy: fallback-on-replace
    kapp.k14s.io/nonce: ''
spec:
  schedule: 0 0 * * *
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: Never
          containers:
            - name: job
              image: bitnami/kubectl:latest
              imagePullPolicy: IfNotPresent
              envFrom:
                - secretRef:
                    name: kubeconfig
              command:
                - /bin/bash
                - '-c'
                - >
                  echo \\"$KUBECONFIG\\" > ~/.kube/config

                  export KUBECONFIG=~/.kube/config

                  export JOB_NAMESPACE=\\"awesome-ci\\"

                  ACTIVE_JOBS=$(kubectl get jobs -n $JOB_NAMESPACE -o json | jq
                  \\".items | .[] | select(.status.active > 0).metadata.name\\")

                  for subdir in /workflow/*; do
                    [ -d \\"$subdir\\" ] || continue
                    subdir_basename=\${subdir##*/}
                    if ! echo $ACTIVE_JOBS | grep -e \\"job-\${subdir_basename}\\"; then
                      echo \\"Cleaning '$subdir'\\"
                      rm -rf $subdir
                    fi
                  done
              volumeMounts:
                - name: workflow
                  mountPath: /workflow
          volumes:
            - name: workflow
              persistentVolumeClaim:
                claimName: jobs-shared-storage
"
`;
